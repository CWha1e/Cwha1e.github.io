<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>蓝帽杯</title>
    <url>/2021/04/22/%E8%93%9D%E5%B8%BD%E6%9D%AF/</url>
    <content><![CDATA[<p>ctf 不是全部，只是学习安全的一种的方式！</p>
<span id="more"></span>
<h5 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h5><p>在此之前把蓝帽杯看的太重了，以至于没有分配到厉害的师兄难过了一段时间，但最终还是以戏剧收场。等待结果ing</p>
<h5 id="web滑雪大冒险"><a href="#web滑雪大冒险" class="headerlink" title="web滑雪大冒险"></a>web滑雪大冒险</h5><p>一句话，就是玩</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E8%93%9D%E5%B8%BD%E6%9D%AF/%E6%BB%91%E9%9B%AA%E5%A4%A7%E5%86%92%E9%99%A9.png?versionId=CAEQFRiBgMCKoerTyxciIDU3YjA0OWQ0N2U3NTQxOWRiNjNlYjBmMGI3NzE1N2U5"></p>
<h4 id="misc冬奥会-is-coming"><a href="#misc冬奥会-is-coming" class="headerlink" title="misc冬奥会_is_coming"></a>misc冬奥会_is_coming</h4><p>打开图片，从文件大小猜测有隐藏文件，打开Kali使用binwalk 分离，获得rar文件，解压获得encode.mp3</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E8%93%9D%E5%B8%BD%E6%9D%AF/%E5%86%AC%E5%A5%A5%E4%BC%9A1.png?versionId=CAEQFRiBgMC3k.rTyxciIDA0MzRhYTU5Y2RiMDQ0ODFiOTkyYmY5OGY1NTA4ZDg3"></p>
<p>先用winhex查看发现文件尾部有cipher</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E8%93%9D%E5%B8%BD%E6%9D%AF/%E5%86%AC%E5%A5%A5%E4%BC%9A10.png?versionId=CAEQFRiBgMDxk.rTyxciIGVmZDE3MGZiZWQ2YTQ0Njc4OTI0ZmY2MzcxMmQ4MWVj"></p>
<p>打开kali 使用cat命令获得密文</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E8%93%9D%E5%B8%BD%E6%9D%AF/%E5%86%AC%E5%A5%A5%E4%BC%9A11.png?versionId=CAEQFRiBgMCElOrTyxciIDI3OWFhZDg4MGU5ZjQwZjBhZjA0ZTRiNTg2ODE4YmIy"></p>
<p>为emoji加密，通过查找猜测为emoji-aes加密，但是找不出密钥，所以继续分析MP3文件</p>
<p>MP3文件，联想encode编码猜测为mp3stego隐写，联想冬奥会举办时间，2022年2月4日，猜测密码为20220204，获取文件encode.mp3.txt</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E8%93%9D%E5%B8%BD%E6%9D%AF/%E5%86%AC%E5%A5%A5%E4%BC%9A2.png?versionId=CAEQFRiBgMDzl.rTyxciIDQ4NmViZDMzMjM2NDQ5MjNiZDc5NDJiODEzZjNmOGE5"></p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E8%93%9D%E5%B8%BD%E6%9D%AF/%E5%86%AC%E5%A5%A5%E4%BC%9A3.png?versionId=CAEQFRiBgMCKlurTyxciIGUzZmQ4NWIzZTVkNDRkYjc5ODQwNDJkZDA5Y2JiOWEx"></p>
<p>先替换\x，将编码进行16进制解码，获得一串符号密文</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E8%93%9D%E5%B8%BD%E6%9D%AF/%E5%86%AC%E5%A5%A5%E4%BC%9A7.png?versionId=CAEQFRiBgMD0murTyxciIGZlYmM5ODcwN2M5MzRmZjA5YTVkNWEyY2VhM2ViOGI5"></p>
<p>查找知道这是wingding加密，通过在线工具解码</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E8%93%9D%E5%B8%BD%E6%9D%AF/%E5%86%AC%E5%A5%A5%E4%BC%9A8.png?versionId=CAEQFRiBgMCrpurTyxciIDhmY2ZhZjgxNjI0NDQzNjJiNWMzNzg0NWYyZjIxNzE2"></p>
<p>GitHub搜索1cePeak储存库</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E8%93%9D%E5%B8%BD%E6%9D%AF/%E5%86%AC%E5%A5%A5%E4%BC%9A5.png?versionId=CAEQFRiBgMDUmOrTyxciIGVmNzViYThmZDFjYjQ2N2RhNGJmNjM4ZDY0YWViN2Ji"></p>
<p>本以为直接下载即可获得key，没成想结果如下</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E8%93%9D%E5%B8%BD%E6%9D%AF/%E5%86%AC%E5%A5%A5%E4%BC%9A4.png?versionId=CAEQFRiBgMCNmOrTyxciIDMxNzNjOTU1ZWExMTQ2OWM4MmRiZDg4MDgyZDFhNGNi"></p>
<p>最后进入post-checkout界面下载获得key</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E8%93%9D%E5%B8%BD%E6%9D%AF/%E5%86%AC%E5%A5%A5%E4%BC%9A6.png?versionId=CAEQFRiBgICimerTyxciIDY0MmMzZmQ2ODNjYjRmNDM4ODEwODE4YWNkYzM2NDlh"></p>
<p>获得key</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E8%93%9D%E5%B8%BD%E6%9D%AF/%E5%86%AC%E5%A5%A5%E4%BC%9A9.png?versionId=CAEQFRiBgIClnOrTyxciIDliZDJiNGFiODVkYTQ5MzdhZTAwZTQ5ZDgyZjdhNzZj">)</p>
<p>How_6ad_c0uld_a_1cePeak_be?</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E8%93%9D%E5%B8%BD%E6%9D%AF/%E5%86%AC%E5%A5%A5%E4%BC%9A12.png?versionId=CAEQFRiBgMCNlerTyxciIDczYjdiMmU1ZTgzNDQyODFhY2YxYWI5M2QyYzQ1YmQ5"></p>
<p>综上，获取flag</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E8%93%9D%E5%B8%BD%E6%9D%AF/%E5%86%AC%E5%A5%A5%E4%BC%9A13.png?versionId=CAEQFRiBgMDGlurTyxciIDY3MjUyM2ViZTVhNTQxMDNiOGUzOTVjYzYyNTFmNDk2"></p>
<h5 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h5><p>三解，排名82。审核能已过，期待参加第一场线下赛。</p>
]]></content>
      <categories>
        <category>write up</category>
      </categories>
      <tags>
        <tag>competition</tag>
      </tags>
  </entry>
  <entry>
    <title>sql注入学习</title>
    <url>/2021/05/23/sql%E6%B3%A8%E5%85%A5%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>sql注入学习笔记</p>
<span id="more"></span>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>笔者从完全不懂sql注入开始学习，在广大的互凉网上寻找资源，所以更多内容为搜集到的内容汇总。上传博客的目的是促进自己学习。如果摘抄至某篇博客的内容会附上链接。</p>
<h1 id="sql注入是什么"><a href="#sql注入是什么" class="headerlink" title="sql注入是什么"></a>sql注入是什么</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p> SQL注入即是指<strong>web应用程序</strong>对用户输入数据的合法性没有判断或过滤不严，攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的<strong>SQL语句</strong>，在管理员不知情的情况下实现非法操作，以此来实现欺骗<strong>数据库服务器</strong>执行非授权的任意查询，从而进一步得到相应的数据信息。</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ol>
<li>广泛性</li>
<li>隐蔽性</li>
<li>危害大</li>
<li>操作方便</li>
</ol>
<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><h4 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h4><p>SQL注入攻击是通过操作输入来修改SQL语句，用以达到执行代码对<strong>WEB服务器</strong>进行攻击的方法。简单的说就是在post/getweb表单、输入域名或页面请求的查询字符串中插入SQL命令，最终使web服务器执行恶意命令的过程。</p>
<h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><p>假设某网站页面显示时URL为<a href="http://www.example.com/?test=123%EF%BC%8C%E6%AD%A4%E6%97%B6URL%E5%AE%9E%E9%99%85%E5%90%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BC%A0%E9%80%92%E4%BA%86%E5%80%BC%E4%B8%BA123%E7%9A%84%E5%8F%98%E9%87%8Ftest%EF%BC%8C%E8%BF%99%E8%A1%A8%E6%98%8E%E5%BD%93%E5%89%8D%E9%A1%B5%E9%9D%A2%E6%98%AF%E5%AF%B9%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9B%E8%A1%8C%E5%8A%A8%E6%80%81%E6%9F%A5%E8%AF%A2%E7%9A%84%E7%BB%93%E6%9E%9C%E3%80%82%E7%94%B1%E6%AD%A4%EF%BC%8C%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E5%9C%A8URL%E4%B8%AD%E6%8F%92%E5%85%A5%E6%81%B6%E6%84%8F%E7%9A%84SQL%E8%AF%AD%E5%8F%A5%E5%B9%B6%E8%BF%9B%E8%A1%8C%E6%89%A7%E8%A1%8C%E3%80%82%E5%8F%A6%E5%A4%96%EF%BC%8C%E5%9C%A8%E7%BD%91%E7%AB%99%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E4%B8%AD%EF%BC%8C%E5%BC%80%E5%8F%91%E4%BA%BA%E5%91%98%E4%BD%BF%E7%94%A8%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9E%84%E9%80%A0SQL%E8%AF%AD%E5%8F%A5%EF%BC%8C%E7%94%A8%E6%9D%A5%E5%88%9B%E5%BB%BA%E6%89%80%E9%9C%80%E7%9A%84%E5%BA%94%E7%94%A8%EF%BC%8C%E8%BF%99%E7%A7%8D%E6%83%85%E5%86%B5%E4%B8%8BSQL%E8%AF%AD%E5%8F%A5%E5%9C%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B%E4%B8%AD%E8%A2%AB%E5%8A%A8%E6%80%81%E7%9A%84%E6%9E%84%E9%80%A0%E4%BD%BF%E7%94%A8%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%A0%B9%E6%8D%AE%E4%B8%8D%E5%90%8C%E7%9A%84%E6%9D%A1%E4%BB%B6%E4%BA%A7%E7%94%9F%E4%B8%8D%E5%90%8C%E7%9A%84SQL%E8%AF%AD%E5%8F%A5%EF%BC%8C%E6%AF%94%E5%A6%82%E9%9C%80%E8%A6%81%E6%A0%B9%E6%8D%AE%E4%B8%8D%E5%90%8C%E7%9A%84%E8%A6%81%E6%B1%82%E6%9D%A5%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84%E5%AD%97%E6%AE%B5%E3%80%82%E8%BF%99%E6%A0%B7%E7%9A%84%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E5%85%B6%E5%AE%9E%E4%B8%BASQL%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB%E7%95%99%E4%B8%8B%E4%BA%86%E5%BE%88%E5%A4%9A%E7%9A%84%E5%8F%AF%E4%B9%98%E4%B9%8B%E6%9C%BA%E3%80%82">http://www.example.com?test=123，此时URL实际向服务器传递了值为123的变量test，这表明当前页面是对数据库进行动态查询的结果。由此，我们可以在URL中插入恶意的SQL语句并进行执行。另外，在网站开发过程中，开发人员使用动态字符串构造SQL语句，用来创建所需的应用，这种情况下SQL语句在程序的执行过程中被动态的构造使用，可以根据不同的条件产生不同的SQL语句，比如需要根据不同的要求来查询数据库中的字段。这样的开发过程其实为SQL注入攻击留下了很多的可乘之机。</a></p>
<h1 id="注入方法"><a href="#注入方法" class="headerlink" title="注入方法"></a>注入方法</h1><h2 id="整数型注入"><a href="#整数型注入" class="headerlink" title="整数型注入"></a>整数型注入</h2><h3 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h3><p>当输入的参数为整型时，如ID、年龄、页码等，如果存在注入漏洞，则可以认为是数字型注入。这种数字型注入最多出现在ASP、PHP等弱类型语言中，弱类型语言会自动推导变量类型，例如，参数id=8，PHP会自动推导变量id的数据类型为int类型，那么id=8 and  1=1，则会推导为string类型，这是弱类型语言的特性。而对于Java、C#这类强类型语言，如果试图把一个字符串转换为int类型，则会抛出异常，无法继续执行。所以，强类型的语言很少存在数字型注入漏洞。 </p>
<h3 id="判断方式"><a href="#判断方式" class="headerlink" title="判断方式"></a>判断方式</h3><ol>
<li>url为 **<a href="https://www.wha1e.cn/text?id=1&#39;**%E6%97%B6">https://www.wha1e.cn/text?id=1&#39;**时</a> 有一个多余的“**’**”使查询错误</li>
<li>url为 <strong><a href="https://www.wha1e.cn/text?id=1">https://www.wha1e.cn/text?id=1</a> and 1 = 1</strong> 时, 没有报错, 除非在代码处做了限制(不允许有and字符串)</li>
<li>url为 <strong><a href="https://www.wha1e.cn/text?id=1">https://www.wha1e.cn/text?id=1</a> and 1 = 2</strong> 时, 由于1=2不成立, 也会报错</li>
</ol>
<h3 id="注入实例"><a href="#注入实例" class="headerlink" title="注入实例"></a>注入实例</h3><p>在浏览器地址栏输入：<code>learn.me/sql/article.php?id=1</code>，这是一个get型接口，发送这个请求相当于调用一个查询语句：</p>
<p><code>$sql = &quot;SELECT * FROM article WHERE id =&quot;,$id</code><br>正常情况下，应该返回一个id=1的文章信息。那么，如果在浏览器地址栏输入：<code>learn.me/sql/article.php?id=-1 OR 1 =1</code>，这就是一个SQL注入攻击了，可能会返回所有文章的相关信息。为什么会这样呢？</p>
<p>这是因为，id = -1永远是false，1=1永远是true，所有整个where语句永远是ture，所以where条件相当于没有加where条件，那么查询的结果相当于整张表的内容</p>
<p><strong>原文链接：</strong><a href="https://blog.csdn.net/github_36032947/article/details/78442189">https://blog.csdn.net/github_36032947/article/details/78442189</a></p>
<h3 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h3><p>1.检查是否存在注入</p>
<p><code>and 1=1 返回正确</code></p>
<p><code>and 1=2 返回错误</code> </p>
<p>2.猜字段</p>
<p><code>order by x</code>(x为数字)</p>
<p>得出字段数</p>
<p>3.爆数据库名</p>
<p><code>?id=1 and 1=2 union select 1,database()</code></p>
<p>得到数据库名称</p>
<p>4.爆列表</p>
<p><code>?id=1 and 1=2 union select 1,group_concat(table_name)from information_schema.tables where table_schema=&#39;sqli&#39;</code>(sqli为数据库名)</p>
<p>因为感觉没有例题空谈无用，所以先去找相对应的题目了。</p>
<p>后续更新。。。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>note</tag>
        <tag>sql注入</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfhub信息泄露</title>
    <url>/2021/04/17/ctfhub%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2wp/</url>
    <content><![CDATA[<p>ctfhub web之信息泄露</p>
<span id="more"></span>

<h4 id="目录遍历与PHPINFO"><a href="#目录遍历与PHPINFO" class="headerlink" title="目录遍历与PHPINFO"></a>目录遍历与PHPINFO</h4><p>0难度</p>
<h5 id="目录遍历"><a href="#目录遍历" class="headerlink" title="目录遍历"></a>目录遍历</h5><p>依次打开文件夹即可，共16种可能，flag为随机出现</p>
<p>属于签到题</p>
<h5 id="PHPINFO"><a href="#PHPINFO" class="headerlink" title="PHPINFO"></a>PHPINFO</h5><p>页面内查找关键字”ctfhub”get flag </p>
<h4 id="备份文件下载"><a href="#备份文件下载" class="headerlink" title="备份文件下载"></a>备份文件下载</h4><h5 id="网站源码"><a href="#网站源码" class="headerlink" title="网站源码"></a>网站源码</h5><p>当开发人员在线上环境中对源代码进行了备份操作，并且将备份文件放在了 web 目录下，就会引起网站源码泄露。</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E7%BD%91%E7%AB%99%E6%BA%90%E7%A0%811.png?versionId=CAEQDhiBgIDF5vaLxxciIDBjZmZkNDQ5ZGUxOTRkMjBhYzAwNjFjNTdlMTViMGVi"></p>
<p>dirsearch扫描</p>
<p>命令如下（windows环境）：</p>
<p>python dirsearch.py -u 网址 -e php 或 python .\dirsearch.py -u 网址 -e php</p>
<p>扫描结果</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E7%BD%91%E7%AB%99%E6%BA%90%E7%A0%813.png?versionId=CAEQDhiBgICCnPqnxxciIDI5MmE3OGY5M2JmMTRhODc5OTM3ZjFkMWYwODI1YTQz"></p>
<p>网址+<a href="http://www.zip下载三个文件/">www.zip下载三个文件</a></p>
<p>最终网站访问获得flag</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E7%BD%91%E7%AB%99%E6%BA%90%E7%A0%81.png?versionId=CAEQDhiBgMCGnPqnxxciIDYwYjcxYjhiNTk3OTQzYjk4OWVhNzc0MDIxNzBlNTVj"></p>
<h5 id="bak文件"><a href="#bak文件" class="headerlink" title="bak文件"></a>bak文件</h5><p>dirsearch扫描</p>
<p>获取三个文件</p>
<p><strong>/index.php</strong></p>
<p><strong>/index.php.bak</strong></p>
<p><strong>/index.php/llogin/</strong></p>
<p>浏览器网址+/index.php.bak打开</p>
<p>下载完成后打开获取flag</p>
<h5 id="vim缓存"><a href="#vim缓存" class="headerlink" title="vim缓存"></a>vim缓存</h5><p>kali下进行</p>
<p>终端：</p>
<ol>
<li>wget <a href="http://challenge-0179187a5798aa64.sandbox.ctfhub.com:10080/.index.php.swp">http://challenge-0179187a5798aa64.sandbox.ctfhub.com:10080/.index.php.swp</a></li>
<li>cat .index.php.swp</li>
</ol>
<p>获取flag</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/vim%E7%BC%93%E5%AD%982.png?versionId=CAEQDhiBgIC2uI6oxxciIGMxNDMwNTY4MDMyYTQ5YTZhMzIxYzBkODFlOTRlMDdh"></p>
<h5 id="DS-Store"><a href="#DS-Store" class="headerlink" title=".DS_Store"></a>.DS_Store</h5><p>同vim缓存</p>
<p>kali下进行</p>
<p>终端：</p>
<ol>
<li>wget <a href="http://challenge-0179187a5798aa64.sandbox.ctfhub.com:10080/.DS_Store">http://challenge-0179187a5798aa64.sandbox.ctfhub.com:10080/.DS_Store</a></li>
<li>cat .index.php.swp</li>
</ol>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/.DS_Store1.png?versionId=CAEQDhiBgICFipSoxxciIDhkZGE4Zjc4MzEzYzRmZDA5M2IwZGE0NzY5NjNmY2Vi"></p>
<p>浏览器访问：</p>
<p>网址/cf4390cd5ee7e79529e10649859bd647.txt</p>
<p>获取flag</p>
<h4 id="Git泄露"><a href="#Git泄露" class="headerlink" title="Git泄露"></a>Git泄露</h4><p>当前大量开发人员使用git进行版本控制，对站点自动部署。如果配置不当,可能会将.git文件夹直接部署到线上环境。这就引起了git泄露漏洞。</p>
<h5 id="log"><a href="#log" class="headerlink" title="log"></a>log</h5><h6 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h6><p>githack官网上下载下来的是python2版本，如今大多数用的都是python3，所以还需下载一个python2。``</p>
<p>cmd中输入python所调用的脚本是环境变量中前面的那一个，如果每一次切换版本还需要更改环境变量也太麻烦了，所以可以使用命令来切换。</p>
<p> <strong>py -2调用python2，py -3调用的是python3</strong></p>
<h6 id="开灶"><a href="#开灶" class="headerlink" title="开灶"></a>开灶</h6><p>githack clone 目标源代码到本地</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">py -2 http:&#x2F;&#x2F;challenge-070d7210e3108a89.sandbox.ctfhub.com_10080&#x2F;.git&#x2F;</span><br></pre></td></tr></table></figure>

<p>执行 <code>git log</code> 查看历史记录</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/log1.png?versionId=CAEQFRiBgIDci9X9yxciIDEzOWI4NDFiY2I2MjQ1ZmY5OWRmZmJjYTJlZWUwMWRj"></p>
<p><code>git diff 9bd149...</code></p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/log3.png?versionId=CAEQFRiBgIC.i9X9yxciIGRlYWU4NDVmYjBhNDQyYmU4NjI0MTQxMDJkOGQ2NjQ0"></p>
<h5 id="stash"><a href="#stash" class="headerlink" title="stash"></a>stash</h5><h6 id="git-stash-的作用"><a href="#git-stash-的作用" class="headerlink" title="git stash 的作用"></a>git stash 的作用</h6><p>git stash用于想要保存当前的修改,但是想回到之前最后一次提交的干净的工作仓库时进行的操作.git stash将本地的修改保存起来,并且将当前代码切换到HEAD提交上.</p>
<p>通过git stash存储的修改列表,可以通过git stash list查看.git stash show用于校验,git stash apply用于重新存储.直接执行git stash等同于git stash save.</p>
<p>最新的存储保存在refs/stash中.老的存储可以通过相关的参数获得,例如stash@{0}获取最新的存储,stash@{1}获取次新.stash@{2.hour.ago}获取两小时之前的.存储可以直接通过索引的位置来获得stash@{n}.</p>
<h6 id="开灶-1"><a href="#开灶-1" class="headerlink" title="开灶"></a>开灶</h6><p>githack clone–&gt;git log</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/stash1.png?versionId=CAEQFRiBgIDCiIr.yxciIGQ5ZDk4YTFhYTM5ZTQ5ODliNzRhYjMyNGU5MmUxY2Nh"></p>
<p>执行 git stash list 发现有 stash,然后git stash pop </p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/stash2.png?versionId=CAEQFRiBgMCMiIr.yxciIDFlMjk3ZTk5YzU5NjRmYjk5YmI2Mjk4NTJlNDI4MDYx"></p>
<p>再次git diff 6458b52874b51846c2ca53a26b0add249369b532</p>
<p>get flag</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/stash3.png?versionId=CAEQFRiBgMCqiIr.yxciIDliMmVjZGQ4YzQzNDQ2OTE4ZjkyMTM0OGYyMzJjMThk"></p>
<h5 id="index"><a href="#index" class="headerlink" title="index"></a>index</h5><p>因为实在太混所以一直对着wp写的，尝试自己做一题，结果githack clone下来后就打开文件夹就最直接存在<strong>flag.txt</strong>。</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/index1.png?versionId=CAEQFRiBgID31IOKzBciIDNlMmMyNDFmYzM0ODRlZGJiZDU1YjEyZGU1ZDYwMGI4"></p>
<h4 id="SVN泄露与HG泄露"><a href="#SVN泄露与HG泄露" class="headerlink" title="SVN泄露与HG泄露"></a>SVN泄露与HG泄露</h4><h5 id="SVN泄露"><a href="#SVN泄露" class="headerlink" title="SVN泄露"></a>SVN泄露</h5><h6 id="写在前面-1"><a href="#写在前面-1" class="headerlink" title="写在前面"></a>写在前面</h6><p>当开发人员使用 SVN 进行版本控制，对站点自动部署。如果配置不当,可能会将.svn文件夹直接部署到线上环境。这就引起了 SVN 泄露漏洞。</p>
<h6 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h6><p>dvcs-ripper中的rip-svn.pl clone下来</p>
<p>前期因为命令错误一直导致clone失败，正确命令：</p>
<p><code>perl rip-svn.pl -v -u http://120.132.56.20:1515/.svn/</code></p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/.svn1.png?versionId=CAEQFhiBgICkofPkzBciIDA5MmQ3ZDUwNDQyNDRkNGU5NWYwZmExMDZlYWRjOGY2"></p>
<p><code>tree .svn</code></p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/.svn2.png?versionId=CAEQFhiBgMDhofPkzBciIDVlZTZkZDZlNDM4MzQzM2I5ZGZmM2Q4ZGMyOTY1NmMy"></p>
<p><code>cd .svn/pristine/</code></p>
<p><code>cat 00/00c73b1c8ee0f1d111180fb329e39c7f8dce7900.svn-base</code></p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/.svn3.png?versionId=CAEQFhiBgMClofPkzBciIGJmNWFjZmZjMjI0MTQyMzdiNjlhMjIzYTNmZWY3MjNl"></p>
<p>get  flag</p>
<h5 id="hg泄露"><a href="#hg泄露" class="headerlink" title="hg泄露"></a>hg泄露</h5><h6 id="写在前面-2"><a href="#写在前面-2" class="headerlink" title="写在前面"></a>写在前面</h6><p>当开发人员使用 Mercurial 进行版本控制，对站点自动部署。如果配置不当,可能会将.hg 文件夹直接部署到线上环境。这就引起了 hg 泄露漏洞。</p>
<h6 id="开灶-2"><a href="#开灶-2" class="headerlink" title="开灶"></a>开灶</h6><p>使用 <code>dvcs-ripper</code> 工具中的 <code>rip-hg.pl</code> 脚本进行 clone。</p>
<p>发现直接执行 hg status 出错，工具 clone 的时候并没有 clone 完整，再次证明不能过分相信工具不要过分迷信工具。</p>
<p>查看<code>.hg/store/fncache</code></p>
<p>可知flag文件名为<code>flag_2592426997.txt</code></p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/hg1.png?versionId=CAEQFRiBgICQ5b6SzBciIDg1NDhjMGI5OTVhNjRlMDBiMTMwMTYyZGFlYzdjMWYy"></p>
<p>浏览器直接访问获得flag</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/hg2.png?versionId=CAEQFRiBgMD35L6SzBciIDc4YThjNTg3YTRkODQ1Mzk5ZDAxOWNjMmFjNWU0M2E4"></p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>ctfhub信息泄露就此上传完毕</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2.png?versionId=CAEQFhiBgID7hfzkzBciIDI3NzVjYzJiNTk0ODRiZTA4YjM1NmZkMWI3NTAwOGFl"></p>
<p>学艺不精所以题目都是看着wp完成的，有很多疑问来不及解决，留下了许多空白，需要不断学习来回头补充。</p>
]]></content>
      <categories>
        <category>write up</category>
        <category>web</category>
      </categories>
      <tags>
        <tag>信息泄露</tag>
        <tag>exercise</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfhub文件上传</title>
    <url>/2021/04/15/ctfhub%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0wp/</url>
    <content><![CDATA[<p>ctfhub web之文件上传</p>
<span id="more"></span>

<h4 id="无验证"><a href="#无验证" class="headerlink" title="无验证"></a>无验证</h4><p>编写一句话木马并上传<br><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC.png?versionId=CAEQDhiBgIDlw6TgxhciIDZkODI4ZmVkNzJhYjQxMjBiN2JkYjIzODM3OTc0OWE0"></p>
<p>获取相对路径</p>
<p>upload/shell.php</p>
<p>打开中国蚁剑上传</p>
<p>右键–&gt;添加数据–&gt;网址+相对路径–&gt;打开flag.php</p>
<p>获取flag</p>
<h4 id="前端验证"><a href="#前端验证" class="headerlink" title="前端验证"></a>前端验证</h4><p>右键查看源码，发现该网站只支持”jpg”、”png”、”gif”,所以将一句话木马后缀名添加”.jpg”上传</p>
<p>burp suite抓包–&gt;将一句话木马后缀名恢复成”.php”，放包</p>
<p>上蚁剑。</p>
<h4 id="htaccess"><a href="#htaccess" class="headerlink" title=".htaccess"></a>.htaccess</h4><h5 id="htaccess是什么？"><a href="#htaccess是什么？" class="headerlink" title=".htaccess是什么？"></a>.htaccess是什么？</h5><p> .htaccess叫分布式配置文件，全称是Hypertext Access(超文本入口),它提供了针对目录改变配置的方法——在一个特定的文档目录中放置一个包含一个或多个指令的文件， 以作用于此目录及其所有子目录。并且子目录中的指令会覆盖更高级目录或者主服务器配置文件中的指令。</p>
<p>作为用户，所能使用的命令受到限制。管理员可以通过Apache的AllowOverride指令来设置。.htaccess文件是用于apache服务器下的控制文件访问的配置文件，因此Nginx下是不会生效的。.htaccess可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档、文件的跳转等功能。</p>
<h5 id="htaccess-文件上传漏洞原理："><a href="#htaccess-文件上传漏洞原理：" class="headerlink" title=".htaccess 文件上传漏洞原理："></a>.htaccess 文件上传漏洞原理：</h5><p>一般.htaccess可以用来留后门和针对黑名单绕过</p>
<p>创建一个txt写入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .jpg</span><br></pre></td></tr></table></figure>

<p>把”jpg”文件当作”php”文件解析</p>
<p>重命名为”.htaccess”</p>
<p>另一种做法：封装：<br>&lt;FilesMatch “1”&gt;<br>SetHandler application/x-httpd-php<br><br>此方法将名为”1”的文件解析为”php”</p>
<h5 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h5><p>上传”.htaccess”文件，提交</p>
<p>目的是替换原有的”.htaccess”文件</p>
<p>上传”一句话木马.jpg”，提交</p>
<p>上蚁剑。</p>
<h4 id="MEMI绕过"><a href="#MEMI绕过" class="headerlink" title="MEMI绕过"></a>MEMI绕过</h4><h5 id="什么是MEMI"><a href="#什么是MEMI" class="headerlink" title="什么是MEMI"></a>什么是MEMI</h5><p>MIME(Multipurpose Internet Mail Extensions)多用途互联网邮件扩展类型。是设定某种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开。</p>
<h5 id="MEMI绕过的原理"><a href="#MEMI绕过的原理" class="headerlink" title="MEMI绕过的原理"></a>MEMI绕过的原理</h5><p>部分Web应用系统判定文件类型是通过content-type字段，黑客可以通过抓包，将content-type字段改为常见的图片类型，如image/gif，从而绕过校验。</p>
<h5 id="常见的MIME类型"><a href="#常见的MIME类型" class="headerlink" title="常见的MIME类型"></a>常见的MIME类型</h5><p>text/plain（纯文本）<br>text/html（HTML文档）<br>text/javascript（js代码）<br>application/xhtml+xml（XHTML文档）<br>image/gif（GIF图像）<br>image/jpeg（JPEG图像）<br>image/png（PNG图像）<br>video/mpeg（MPEG动画）<br>application/octet-stream（二进制数据）<br>application/pdf（PDF文档）</p>
<h5 id="解题-1"><a href="#解题-1" class="headerlink" title="解题"></a>解题</h5><p>上传”一句话木马.php”,Burp Suit抓包</p>
<p>raw栏，修改Conte-Type: application/octet-stream为</p>
<p>Conte-Type: image/png</p>
<p>放包</p>
<p>上蚁剑。</p>
<h4 id="文件头检查"><a href="#文件头检查" class="headerlink" title="文件头检查"></a>文件头检查</h4><p>提交”一句话木马.php”文件后报错，返回为只允许”jpeg,jpg,png,gif”类型文件</p>
<p>上传”一句话木马.php”，Burp Suite抓包；</p>
<p>修改Content-Type: image/gif</p>
<p>给一句话木马前添加”gif”文件的文件头，”GIF89a”,放包；</p>
<p>上蚁剑。</p>
<h4 id="00截断"><a href="#00截断" class="headerlink" title="00截断"></a>00截断</h4><p>先上个图</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/00%E6%88%AA%E6%96%AD1.png?versionId=CAEQDhiBgID3vcP3xhciIGVlYmM3NzYzNzgzNjQ1M2Q5ZGI3ZWU0NTAzOTAzMDE4"></p>
<h5 id="什么是00截断"><a href="#什么是00截断" class="headerlink" title="什么是00截断"></a>什么是00截断</h5><p>00截断的原理，就是利用0x00是字符串的结束标识符，攻击者可以利用手动添加字符串标识符的方式来将后面的内容进行截断，而后面的内容又可以帮助我们绕过检测。</p>
<p>需要注意的是，0x00截断是16进制的截断，需要修改16进制的数据头，如果使用burp，就要在Hex中对数据进行改写。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">00截断的限制条件是PHP&lt;5.3.29，且GPC关闭，一般在url上</span><br></pre></td></tr></table></figure>

<p>在url中 %00 表示ascll码中的 0 ，而ascii中0作为特殊字符保留，表示字符串结束，所以当url中出现%00时就会认为读取已结束。</p>
<h5 id="表达方式"><a href="#表达方式" class="headerlink" title="表达方式"></a>表达方式</h5><p>0x00 ， %00 ， /00 </p>
<h5 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h5><p>上传”一句话木马.php%00.jpg”时，后台读取到”一句话木马.php”就停止了。</p>
<h5 id="解题-2"><a href="#解题-2" class="headerlink" title="解题"></a>解题</h5><p>上传一句话”1.php”，BP抓包</p>
<p>修改如下</p>
<ol>
<li>Post添加1.php%00</li>
<li>filename修改为”1.jpg”</li>
</ol>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/00%E6%88%AA%E6%96%AD2.png?versionId=CAEQDhiBgMD2k77.xhciIGRjNThlNDE0Yjc1MDQ4NGFiMzAzNjJkNzRjMzIwMTI1"></p>
<p>放包</p>
<p>上蚁剑？</p>
<p>踩坑预警</p>
<p><a href="http://challenge-e119f2f1e564a7be.sandbox.ctfhub.com:10080/?road=/var/www/html/upload/1.php">http://challenge-e119f2f1e564a7be.sandbox.ctfhub.com:10080/?road=/var/www/html/upload/1.php</a></p>
<p>错误演示</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/00%E6%88%AA%E6%96%AD4.png?versionId=CAEQDhiBgMCArsz.xhciIGU4ZjRhNzI1OWFkZDQ5MjdhMWRlMTkxOTc2MTZhMjhi"></p>
<p>将”?road=/var/www/html”删除，直接访问</p>
<p><a href="http://challenge-e119f2f1e564a7be.sandbox.ctfhub.com:10080/upload/1.php">http://challenge-e119f2f1e564a7be.sandbox.ctfhub.com:10080/upload/1.php</a></p>
<p>正确连法</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/00%E6%88%AA%E6%96%AD3.png?versionId=CAEQDhiBgMDrk77.xhciIDkxOGRjOTJlZjA5NjRkYWNhZThhMTkwMDQ0YmY4YjBk"></p>
<p>粘贴一段原话</p>
<p><em><u>“action=?road=var/www/html/upload/“和$des = $_GET[‘road’] . “/“ . rand(10, 99) . date(“YmdHis”) . “.” . $ext;这段代码的意思是将上传的文件放在upload文件夹中，而直接访问?road=var/www/html/upload/会再次调用代码（本来会报错，但@和服务器端都抑制了报错），所以只需要访问/upload/1.php就可以了</u></em></p>
<p>连接成功，获取flag！</p>
<h4 id="双写绕过"><a href="#双写绕过" class="headerlink" title="双写绕过"></a>双写绕过</h4><p>打开靶机上传一句话成功后发现并不是我们想要的结果</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E5%8F%8C%E5%86%99%E7%BB%95%E8%BF%871.png?versionId=CAEQDhiBgMC4_IH_xhciIDU0Y2EwNTc2ZjRlZjQ1ZGM5MTQ5MTcyZGVmOTU3ZmQ0"></p>
<p>根据提示使用双写绕过：</p>
<p>BP抓包；</p>
<p>将文件后缀名修改为”pphphp”；</p>
<p>放包；</p>
<p>上蚁剑。</p>
<p>至此文件上传告一段落</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0.png?versionId=CAEQDhiBgIDqj4f_xhciIGIxZWYxZmZhMGY1NjQ0ZWRhOTc5ODUxYTljYjE2NTZk"></p>
]]></content>
      <categories>
        <category>write up</category>
        <category>web</category>
      </categories>
      <tags>
        <tag>exercise</tag>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>2021CISCN国赛</title>
    <url>/2021/05/16/2021CISCN%E5%9B%BD%E8%B5%9B/</url>
    <content><![CDATA[<p>360高考</p>
<span id="more"></span>
<p>因为写好的blog居然没保存，且太多题目无法复现，所以先放在一边，回头再写。</p>
]]></content>
      <categories>
        <category>write up</category>
      </categories>
      <tags>
        <tag>competition</tag>
      </tags>
  </entry>
  <entry>
    <title>蚁剑使用</title>
    <url>/2021/04/15/%E4%B8%AD%E5%9B%BD%E8%9A%81%E5%89%91%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>中国蚁剑一把梭</p>
<span id="more"></span>

<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>官网下载：<a href="https://github.com/AntSwordProject/">https://github.com/AntSwordProject/</a></p>
<p><a href="https://github.com/AntSwordProject/AntSword-Loader"> AntSword-Loader </a></p>
<p>下载AntSword 加载器</p>
<p>（注：安装路径一定要为英文路径）</p>
<p>打开文件夹，找到AntSword.exe,选择以管理员身份运行；</p>
<p>选择一个空文件夹初始化，自动下载源码，完成。</p>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>右键–&gt;添加数据</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E8%9A%81%E5%89%91%E4%BD%BF%E7%94%A81.png?versionId=CAEQDhiBgICp_v3fxhciIDUyYWQwYzhkNDhjODQyNThhOGE5MTliZjhkZDAxMmRl"></p>
<p>输入网址以及相对路径，连接密码，测试链接成功后保存</p>
<p><img src="https://wha1e-bucket.oss-cn-beijing.aliyuncs.com/%E8%9A%81%E5%89%91%E4%BD%BF%E7%94%A82.png?versionId=CAEQDhiBgMDcq4TgxhciIDkwOGY0MGVhMWI1YTQwZjRiN2EyNTg0MTk2OTQxN2Q2"></p>
<p>大功告成！</p>
<p>（连接方法有很多种，目前处于学习阶段只列出了最简单的方式）</p>
<h4 id="插件的使用"><a href="#插件的使用" class="headerlink" title="插件的使用"></a>插件的使用</h4><p>它的插件不能直接使用，需要带科学上网。</p>
<p>下面是科学上网邀请</p>
<p><a href="https://xtunnel-aff.icu/auth/register?code=T4Ve">https://xtunnel-aff.icu/auth/register?code=T4Ve</a></p>
<p>后续更新中……</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>tool</tag>
      </tags>
  </entry>
  <entry>
    <title>中华田园犬</title>
    <url>/2021/04/25/%E4%B8%AD%E5%8D%8E%E7%94%B0%E5%9B%AD%E7%8A%AC/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="7ca1ef416fbc4cba99f42c0d805787007f64dc50711004631d91cdcdd3bec7c3">2c4e4944032795ef651cbd82ab2aece6c6aa8e7ab7f73410015c1c3e7f094086e9317d93d07b177871ba594ba44b96f8411c6d7216a7efff47631cfaccc9ec39ee9afff23549d65ba3afba96e0c70eaf20dc1169cdd778ea8bf8aabd692aeb3b85001b9b196b1736c627cc2cde1cf39048e1377941a2f972b2f4812e796299bccd9a730ce8c9a56f67ab9b03d5d13f9a88029fa61d7b26c4c47a88034e5461d0ab18b3a249df29167a0cfabdd816f8b3301dbdc0c5fc830b4295442506f14817a8af2970ec677e7ef4468c737a8e757b5df8d10457bc4810fd8c0a4eae5a11680f010a7329b6571b739bbdb090b0c3acea70534b0eb225b1537480a5da9682f3898e637e972cfdc6d7c5cd6b95889cda3ccfd97219c800cc66e333a7e1565c7c853f9024a5345d47cefa74d3108b30461891f7237d6d744112dd2becb639860024c2dfc8b6bf99a13ed4f7f73ef8fc8e5903fb70bddf2fca406304e5be24c2d55126bdaa8ec4f6f648c0c8039c67391101fa16f75378c9d354032107abe66e9c3d1f18c90895d460a64b54e70f3de7135cd2c81b4743c0bf983ea1f7c28814ce28b3135b73c1a62df2b8b46262c57a415386093225f0e09840c1de052ca5b67eff12083a47188b3d3c0dcf142d8d05b853375490c533e3e961b6efff2ceaa425e708c11f2aca8f0adb0d4b16086fb184e5c5e3cbc8e9b6ffb6094b3cfacfe6840d83ac47aacdbdc5671741aba7dcd7aa2068e9c072cc860c66219cc06d8889b12405016502fb720225154ad4609a3659e36ddfb5b2a81d4de0db72693416a845487722eb25b7ef539bc9f7a878b436fb1e5272d7e2a4ef49148eec76b6347f69b72e17e7e4249e87bd9cc9dacb26a8e1fc776e891da2f09872a4f527adf49a87e19ad7b390f3c97b9dfcfccdfe8e1bc4a98e29a53b07695c0c76a767f7fccc021e56d34fe62dc5ecb46d10f4265ae918d31d532f5c1d067b80186c4524c04b655c2205c3ffd23af8c46b0943561e2ab1ce6c294ed37c0643536070200ada0658ac1ae144b896744a9e58da8eaf6f6c8de7856be31e50c5278af37b64700c6b7bc83dfb51be339a206d164c043eb80aaf9cb3307d4347fa4331b46d7693a18fb835d307a71da26c6840bb46924f2cb4aeb8ea8dc0fe10ef797475af26f4e7949e617a801a62e15ced78e0a7f3163ad3436fd23f9981bcaf57d60616998f83593edd5dcb6335b2fc4f37214129c819dbeaa518968f4460cdbc5dd9041269b636b4fd82934ebda684b7578084ebb3423068bfc84e7e76bab19699710c40de8699db1180538e7a6d5fa00170f33d511fa533854ec523c46698a480367022d4e2990cb2999d2c9bfb02b10a325785a57aa9d13360a163a3491b417bc2053a1b1e5ea759c4aa1872e19954109ca680e79eb332dfbeca1301ce002dc20a08548240c8bbc49240805e94a849bebaff5e3404279741249e467bd790b637537443d58aa3900597e75070d9ac1be18ce7d6bc2a9fc9059dfdf8cca5c88e56ddecc2d93c7620a20fd15659b1a762526138331048946dc5cbe276b7b1de9b8a2654d7b91b076c6a2be9d250ed9a97771ad5dc812012e566f31c4a122e8d03deabe7a532cc2c1c572e53f853055f789407b1a9d50c2661878e1c0d5c5e9822d73bcc518c0aafc9f3ff5d44e4e583e3920c5f24f75901e1ff2f2c7c66ee8e8e46f3b92cbc80bedbe84dde5f71a695729d6e78705325a610a6f52772d5aeaca92aecf74f59bac8f094a0a02bf5d55198521c603bfe18b71d1b0596fefbf91c40117740ae41ef22ef5f2f318966ecf425fc0ad564c1d842c9f310e25394a15c3e0fe692f9aa85b84ff7b87c49fc465ec0235104c0db4e530ececd5e7fcea2502d194cffd8676111a5c5f236da79266cbb0bb6b0731d95379ca8bf23188e830e8dd124245a95a02def6730177de84a747148186c3ee81eceaeec90187ab50abb8585cb45ba72d71857268e9d9dc55ed511e2ab40ffd6ace3ac488b23d6492f1bd7dbed0b203bfebc78ea31fd9c4a335265104530a415c699df1de56c8ac0b439784cd90e4175037798a72d1783200e8ddba4077fb50815fd621082fe716bf4da75c6b2f174727ade73d4a7f0280e996df95c30ec8db950351fd0d87a102d46267fdbd82e0efd9a1f109ffea303c4a63290f078e02b7b7712d1a4f5f2a1e9f002de6feef9aadec3984afd0c41ad28b7836755df6f229316238852327cd97a894c046fcf47ff1ac4e029bf41d711e182bc87594032127facb1d10c035ac5524a3f37bb508d2bc7ad5e5296975e95254f31dd962f424abed7a264daeb53b5f7a32422e96f910c85159c4b58675ca900b36c34e0e03c31b98d4d9088602db3726ae0589ebda5750e6af45905ed2eaac71bb810688640c8112170b456afbb8e6fb690e4976b6934d418c04ac06c789a54028ea541a4364e510faeebb9c03f742aa00e77cc7ff1650a52cd5da26a23a3e7845b69ade244e9ea9295f2016e043c5818665ec13bcc8aff38cb558d3807045e062f2124169c0addc9cd9b52a604a5ef24059f44b3a5cb02cc6181f7e4033d101ab1a2fb59776a8caa93b63cf51b5f65c2de83de94810f6b3882d4f637b095336120eeadb0361f1c35c80f13a34ccd6a1cea1ecb6ef3a6aaa5ea44bb0762df4d0c543914775be8c5aece2f17580cb02531fbb319261ee85d016e5586cad07246cd9ab8a184e436f9ac7e2b7997fc6006361ea69582f9adf05aa8f132206c5fa2465b328219678ce9f6eb8750aca519b44c30b1e5294429b42703d6f4ad5afeb9ac811c38036736b64cf124e22313a9ff4258336a4e0b1d7f9dc2685ea35f81bb3e652bdedafa87a8170f9a99aa94b3890472f1210b58c8a521d9a47dda1cf91ef738ea21a2b6243fbe4563b06e44a95ff47c7a03473778cd34ab4a81e11af038364d5e4432763d7e345b6a37b3c4d36180736d20372a0e3fefe19c50e0d60d1d370f3346ed674b370b8c8386a755c3dba98d78ea6e0b0c8a4f0b2cc16f1bdf297567dc8092d1fbfa8ea4a0c4c8cdfe463603705035417c371541649c8604cfa162580cdd7ed4a3272cc0e2551f01be7299577d8ae63142ef9f7b2e79543338ebd643bdbc1416b6334e77e36c17bbacf6a2214430f653af850f31012218fe163c4d9c2ad7e79c360a9b894983104e3520b59db6dcaba02cf2f77889e5486e43daeac020d88e9559d5a4fd33ff595e45e39f27eb1480655f1ab58ba4a8e7d97f363e769313cfa2b670fd9054e3cb4eba101637328001610493a08c8f005344fc4b38eb73ea5701016d11beb85d8817af1070d0bb72330dc2445e08515a4b3944578191963fde44883f4b5c00899a28d3b728883f9b0aa19468ad9fe131db4edabc4420e698144e1d15aba47a8320b2add3f83f41ee006118e3327a50a6b731068f4dc26bae5b25bf5a654444d47c7712d4fa08b222acb07ca0541b22128f33fae5854578da38932f10e640e00c64b00a360156e4786c539db0f4783c56822d3f9df39a4e23ce024a37330333822074bade67e590ffac0f48357ee2fe210ce3261fc064a3717c545bd45def79fe5f0c740339cecc322c51f020680ef5f391e5ee28d03094268c61dbdc592a683e667bb8de37db6fcf70ad5c323e31740456fe18edd02adde4f637c45e50f3df96eff48dc5704f17452c4bdc12de5f3d31f22c7850f29d5242e0d63e89a3671d1a70b110a8df8d620526486c11cab14570d10f19263a3ef238f01630c9434493cebd7bd69421648d57c3db11a526b16c85b12904cd6874c737e98f057d92edfb52069067bc9852cbc1516c7aaa8aeb62f3e9c3c2470431939d85aa28c3afb40775f1c551a755f81074c2d984c56124fdbb89b7ac30523e98d6b68f59a7937db5e8d44cb7b3067ec1a2909be833cb0e567fc9047e62c755aa0f0f2b8b609891f17a5f50ea0a31cb812aaac0933aed9a14b93c961d27ff612f626cb04e04871b6ffb723b939842a0e2e295d4559b397a1035cbd11a8025a352421da31d8107202f986824a5cb702446b38717e5a066fae40d3a7389968b5ea7117adcf3bfb4fa99034d9885e5a5651a3cf73a40ce097fe88ffb295302c2c7f9cb37cd2b410aed1d90c98e1f3ab64662e18c92e37f8b979b772df78b6040f51f72a4561eb7a0a36c02c7b448af1cc5d7c322391ebe67b21194f0d4f05ea04523639e68c08b3e90b4d150b597917c25c482cab430500734b03039dd2f1709c28bea6598abdcd7b54653cf27cde976448754181a26d76fae43354b89b2a03d7e0ab4f85f56d211052f729ca42930a428892aef4ef1c2f7dc0ce0942fc8d220a14ecb0a48dd5a133eb0177e95ac9ce4523d0b09f188ad263f41f095c0d5f361483b49d684091e9147e89f7971e92e9d83a600f54c8d63bd15ee9cc52ac2b8cc697a774aac1018528d25556c790208431736b78193aeb5ba2436fbb4394634df8295f54d924e4212a2a861f5f6236e23f1a436e08aa3d77638c9d5b6e9eb8059bdc558a60b037de030d9e64b7c4e60fd71973941a3a29c69bac54c24b5fc7a8f31a43b3baa14d6d5c03e500764e1b94798b81f26c67df7a255ec5906e97f1c9cdd323321aa517e09f39c80134d654e45785b65cab09afd84cefe0734aec7ebc932d1936544fcfb690305d189ccbbf8a1559596d069cea78da68c43b5c1b7d943346c5aa0b53f70591d88ec5da687e893d716658170a2a3c12d7024db4499c1c2a75a503a9659cc9f18f223cdd2789835f5ce53e9b62df06fa72d6b5add48fdf42f35c966ed80d20819e77edfe14168e33c484b96c7b67f545e2af24243b39660c0289f122d6c5a9ed795689e247943af0f3a909d2cb19be5f7fe3c4eaa4d1afb37192b058128b4c3252815c7efa672981c1ca772eaebfb95535f0d0f9c9125df1e9e7e7bd30a7b3e3ce43a8e4683593ff5798d7cc14af02e6f9a794c7f5be738072a16607e69595c83dcafe76fef77be3dbaf5832d22765014c5ab806e9d97a4ea5e1edaf8a11746ca1b199a9829b8f110d25e3c83632c4fa2931aed68eeee9428463e61493559edcf3ced2065002cc1ba97e7aa5892080f1b435df6b3046df38ae966ff0ac5bb3916aa7234648b9e230f30c8ce764f2ad3a5233cd75872a3338a9aae769f89f9dc713e3af2a2d069b666bd2976f1842cfd01758a7ee925dafb28be502531f16efb8d85b7a3386f81617bdefe6f134bcff6459e8f632c6482c45aeecdf5baad2b02e1b5169543ddf64c245d9ddd100d4949c78da874f339afc187ba030442c58738258cd7361edc97b3089071d46975e975df7de6dd8d9b968c02575bde8b04c35b19e3509f976b26a30b6bdee94b88f2492bb835fa178d14e071ab1eb988c3d9f31b244f91a9bfba5816de2863ec4f348995f7f58456da43a72f290e22ba39c14d902cef52001b1bec3e7801108f28915d8dc9c091b3b85964846d9655c02dfb2e1b8fcdf6990e3798a1d4c6b02aeb4e1bf76bfc9bcd700d4a1834489817ee9f0c969c04f9a7231b0ff3f813d2d829439cad8b9cfb1762d3ba2b3dc59e573a3433a6ecedd8cff6207d85f69ceb92279fbac1a90736bda4e8a30106f100226245fd7c2f65b25b2096edb1f0735e1c2e7ec656bd166b7110ab65be0d6d27942aa411fed7d73332f26628817108e5ef427e74887256319148dad085bbf7042e5c8945e3d8da12bc5a032602161a1978ab95152fd878c9f09284e8814065693d65be39235d0985c03717cde5c0868c98351b8153be28d1c2d930eccfa9e26a7d627240cb3e6cdbe25c46aa58b1ba03c11aa1a2f8956ef68f995af2ee0d592a803c947ed27fc4add108e4a5de1fa00c1e1a7f4a162a34bb19cecbcbaa6ceb2630b06da89a7180270a7f77f3bf16f7789ab8a2a68641c2c535514679611dc86a8847012c358b922738164cd9575e5488649043f0b0dbd74274abbab2546aaa147bea8232151fb4c038a5560f253e1879c4280a09b40d771040c5936a82cca160ab6f5a4995509b8c5d029a5fe9c04e72813146a534b0eb8a4c11f771eceb433f34167875f90e6c2fc86b23ba8e33b97fb0a892467e1e740d1ee6ad679c8e72e858e6a1c2aeef90ef9894c48c90ba782f09865e1e6a22941d3b1b9bfc064b46ea6378782728ff10481b9c57d8e239bb931aea20a1d5bb24c1cc6b0e05e5848da34e10b931d04878b294204b2ec3e381b50750de7070b1</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Is it the base family?</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>dailylife</category>
      </categories>
      <tags>
        <tag>daily</tag>
      </tags>
  </entry>
  <entry>
    <title>First</title>
    <url>/2021/03/27/first/</url>
    <content><![CDATA[<p>搭建博客成功！<br> <span id="more"></span><br>  此次搭建博客的历程，由于对命令的不理解导致饶了许多弯路。<br>搭建博客的目的是为了更好的学习，今后也一定要不忘初心，多逛逛大佬的博客，常更新自己的博客。</p>
<p>最后在此鸣谢电子马同学的大力支持。<br>附上搭建博客教程：<a href="https://zhuanlan.zhihu.com/p/102592286">https://zhuanlan.zhihu.com/p/102592286</a></p>
]]></content>
      <categories>
        <category>dailylife</category>
      </categories>
      <tags>
        <tag>daily</tag>
      </tags>
  </entry>
</search>
